
R version 3.0.2 (2013-09-25) -- "Frisbee Sailing"
Copyright (C) 2013 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin10.8.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "InterVA4"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('InterVA4')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("InterVA")
> ### * InterVA
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: InterVA
> ### Title: Provide InterVA4 analysis on the data input.
> ### Aliases: InterVA
> ### Keywords: InterVA
> 
> ### ** Examples
> 
> data(SampleInput)
> sample.output<-InterVA(SampleInput, HIV = "h", Malaria = "l", directory = "VA test",
+ filename = "VA_result", output = "extended", append = FALSE, replicate = TRUE)
> 
> 
> 
> cleanEx()
> nameEx("InterVA.plot")
> ### * InterVA.plot
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: InterVA.plot
> ### Title: Plot a individual level distribution of va probabilities.
> ### Aliases: InterVA.plot
> ### Keywords: InterVA
> 
> ### ** Examples
> 
> data(SampleInput)
> sample.output<-InterVA(SampleInput, HIV = "h", Malaria = "v", directory = "VA test", 
+ filename = "VA_result", output = "extended", append = FALSE)
> 
> ## Individual level summary using pie chart
> InterVA.plot(sample.output$VA[[7]], type ="pie", min.prob =0.01,
+ main = "1st sample VA analysis using pie chart", clockwise = FALSE,
+ radius = 0.6, cex = 0.6, cex.main = 0.8)
> 
> 
> ## Individual level summary using bar chart
> InterVA.plot(sample.output$VA[[7]],type="bar",min.prob=0.01,
+ main = "2nd sample VA analysis using bar chart", cex.main = 0.8)
dev.new(): using pdf(file="Rplots1.pdf")
> 
> 
> 
> cleanEx()
> nameEx("InterVA4-package")
> ### * InterVA4-package
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: InterVA4-package
> ### Title: Perform InterVA4 algorithm and provide graphical summarization
> ###   of COD distribution.
> ### Aliases: InterVA4-package InterVA4
> ### Keywords: InterVA
> 
> ### ** Examples
> 
> data(SampleInput)
> sample.output<-InterVA(SampleInput, HIV = "h", Malaria = "v", directory = "VA test",
+ filename = "VA_result", output = "extended", append=FALSE)
> 
> 
> 
> cleanEx()
> nameEx("Population.summary")
> ### * Population.summary
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: Population.summary
> ### Title: Summarize and plot a population level distribution of va
> ###   probabilities.
> ### Aliases: Population.summary
> ### Keywords: interVA
> 
> ### ** Examples
> 
> data(SampleInput)
> sample.output<-InterVA(SampleInput, HIV = "h", Malaria = "v", directory = "VA test",
+ filename = "VA_result", output = "extended", append=FALSE)
> 
> ## Population level summary using pie chart
> population.summary <- Population.summary(sample.output$VA, type = "pie", min.prob = 0.01, 
+ main = "population COD distribution using pie chart", clockwise = FALSE, 
+ radius = 0.7, cex = 0.7, cex.main = 0.8)
dev.new(): using pdf(file="Rplots2.pdf")
> 
> ## Population level summary using bar chart
> population.summary <- Population.summary(sample.output$VA, type = "bar", min.prob = 0.01,
+ main = "population COD distribution using bar chart", cex.main = 1)
dev.new(): using pdf(file="Rplots3.pdf")
> 
> 
> 
> cleanEx()
> nameEx("SampleInput")
> ### * SampleInput
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SampleInput
> ### Title: 10 records of Sample Input
> ### Aliases: SampleInput
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(SampleInput)
> 
> 
> 
> cleanEx()
> nameEx("causetext")
> ### * causetext
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: causetext
> ### Title: Translation list of COD codes
> ### Aliases: causetext
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(causetext)
> 
> 
> 
> cleanEx()
> nameEx("probbase")
> ### * probbase
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: probbase
> ### Title: Conditional probability of InterVA4
> ### Aliases: probbase
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(probbase)
> 
> 
> 
> ### * <FOOTER>
> ###
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  1.809 0.039 1.856 0 0 
> grDevices::dev.off()
pdf 
  2 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
